"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
var binding = require('./binding');
var MetricType;
(function (MetricType) {
    MetricType[MetricType["Number"] = 0] = "Number";
    MetricType[MetricType["Rate"] = 1] = "Rate";
    MetricType[MetricType["Percentile"] = 2] = "Percentile";
})(MetricType = exports.MetricType || (exports.MetricType = {}));
/// <summary> A cache for metric wraps. </summary>
var _metricsCache = {};
function get(section, name, type, dimensions) {
    if (dimensions === void 0) { dimensions = []; }
    var key = (section ? section : "") + "\\" + (name ? name : "");
    // Check cache first
    var metric = _metricsCache[key];
    if (metric) {
        return metric;
    }
    // Add to cache
    var metricWrap = new binding.MetricWrap(section, name, type, dimensions);
    metricWrap.section = section;
    metricWrap.name = name;
    _metricsCache[key] = metricWrap;
    return metricWrap;
}
exports.get = get;
