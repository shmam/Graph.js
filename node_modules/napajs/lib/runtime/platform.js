"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
var binding = require('../binding');
var log_1 = require("../log");
/// <summary> Initialization of napa is only needed if we run in node. </summary>
var _initializationNeeded = (typeof __in_napa === 'undefined');
/// <summary> Empty platform settings. </summary>
var _platformSettings = {};
/// <summary> Sets the platform settings. Must be called from node before the first container is created. </summary>
function setPlatformSettings(settings) {
    if (!_initializationNeeded) {
        // If we don't need to initialize we can't set platform settings.
        log_1.log.err("Cannot set platform settings after napa was already initialized");
        return;
    }
    _platformSettings = settings;
    initialize();
}
exports.setPlatformSettings = setPlatformSettings;
function initialize() {
    if (_initializationNeeded) {
        // Guard initialization, should only be called once.
        binding.initialize(_platformSettings);
        _initializationNeeded = false;
    }
}
exports.initialize = initialize;
