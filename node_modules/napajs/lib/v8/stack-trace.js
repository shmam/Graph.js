"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
/// <summary> Get current stack. </summary>
/// <param name="stackTraceLimit"> Max stack depth to trace. </param>
/// <returns> Array of CallSite. </returns>
function currentStack(stackTraceLimit) {
    if (stackTraceLimit === void 0) { stackTraceLimit = 0; }
    var e = Error;
    var originPrepare = e.prepareStackTrace;
    var originLimit = e.stackTraceLimit;
    if (stackTraceLimit > 0) {
        e.stackTraceLimit = stackTraceLimit + 1;
    }
    e.prepareStackTrace = function (prepare, stack) { return stack; };
    // We remove stack at top since it's always this function.
    var stack = new e().stack.slice(1);
    e.prepareStackTrace = originPrepare;
    if (stackTraceLimit > 0) {
        e.stackTraceLimit = originLimit;
    }
    return stack;
}
exports.currentStack = currentStack;
/// <summary> Format stack trace. </summary>
function formatStackTrace(trace) {
    var s = '';
    for (var _i = 0, trace_1 = trace; _i < trace_1.length; _i++) {
        var site = trace_1[_i];
        s += 'at '
            + site.getFunctionName()
            + '('
            + site.getFileName()
            + ':'
            + site.getLineNumber()
            + ':'
            + site.getColumnNumber()
            + ")\n";
    }
    return s;
}
exports.formatStackTrace = formatStackTrace;
